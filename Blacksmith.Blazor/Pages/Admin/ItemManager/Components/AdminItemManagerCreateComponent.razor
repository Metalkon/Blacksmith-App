@inject HttpClientTokenService client

@if (pageState == "Loading")
{
    <LoadingComponent Message="Item Manager"></LoadingComponent>
}
@if (pageState == "Error")
{
    <ErrorComponent Message="@message"></ErrorComponent>
}
@if (pageState == "Active")
{
    <main class="d-flex justify-content-center align-items-center h-75">
        <div class="container">
            <div class="row justify-content-center">
                <div class="col-sm-10 col-md-8 col-lg-6">
                    <div class="card">
                        <div class="card-body m-sm-4">
                            <b><h3>Create Item</h3></b>

                            <div class="mb-1">
                                <label class="form-label fs-6">Id</label>
                                <input class="form-control form-control-sm" type="number" placeholder="Id" @bind-value="CreateItem.Id" />
                            </div>
                            <div class="mb-1">
                                <label class="form-label fs-6">Name</label>
                                <input class="form-control form-control-sm" type="text" placeholder="Name" @bind-value="CreateItem.Name" />
                            </div>
                            <div class="mb-1">
                                <label class="form-label fs-6">Rarity</label>
                                <select class="form-control form-control-sm" @bind="CreateItem.Rarity">
                                    <option value="ItemEditDTO.ItemRarity.Common">Common</option>
                                    <option value="ItemEditDTO.ItemRarity.Uncommon">Uncommon</option>
                                    <option value="ItemEditDTO.ItemRarity.Rare">Rare</option>
                                    <option value="ItemEditDTO.ItemRarity.Epic">Epic</option>
                                    <option value="ItemEditDTO.ItemRarity.Legendary">Legendary</option>
                                </select>
                            </div>
                            <div class="mb-1">
                                <label class="form-label fs-6">Tier</label>
                                <input class="form-control form-control-sm" type="number" placeholder="Tier" @bind-value="CreateItem.Tier" />
                            </div>
                            <div class="mb-1">
                                <label class="form-label fs-6">Weight</label>
                                <input class="form-control form-control-sm" type="number" step="0.01" placeholder="Weight" @bind-value="CreateItem.Weight" />
                            </div>
                            <div class="mb-1">
                                <label class="form-label fs-6">Description</label>
                                <textarea class="form-control form-control-sm" placeholder="Description" @bind="CreateItem.Description"></textarea>
                            </div>
                            <div class="mb-1">
                                <label class="form-label fs-6">Image</label>
                                <input class="form-control form-control-sm" type="text" placeholder="Image" @bind-value="CreateItem.Image" />
                            </div>
                            <div class="mb-1">
                                <label class="form-label fs-6">Tradable</label>
                                <select class="form-control form-control-sm" @bind="CreateItem.Tradable">
                                    <option value="true">True</option>
                                    <option value="false">False</option>
                                </select>
                            </div>
                            <div class="mb-1">
                                <label class="form-label fs-6">Base Durability</label>
                                <input class="form-control form-control-sm" type="number" placeholder="Base Durability" @bind-value="CreateItem.BaseDurability" />
                            </div>
                            <div class="mb-1">
                                <label class="form-label fs-6">Base Price</label>
                                <input class="form-control form-control-sm" type="number" placeholder="Base Price" @bind-value="CreateItem.BasePrice" />
                            </div>
                            <div class="mb-1">
                                <label class="form-label fs-6">Base Score</label>
                                <input class="form-control form-control-sm" type="number" placeholder="Base Score" @bind-value="CreateItem.BaseScore" />
                            </div>
                            <div class="mb-1">
                                <label class="form-label fs-6">Base Attack Power</label>
                                <input class="form-control form-control-sm" type="number" placeholder="Base Attack Power" @bind-value="CreateItem.BaseAttackPower" />
                            </div>
                            <div class="mb-1">
                                <label class="form-label fs-6">Base Attack Speed</label>
                                <input class="form-control form-control-sm" type="number" placeholder="Base Attack Speed" @bind-value="CreateItem.BaseAttackSpeed" />
                            </div>
                            <div class="mb-1">
                                <label class="form-label fs-6">Base Magic Power</label>
                                <input class="form-control form-control-sm" type="number" placeholder="Base Magic Power" @bind-value="CreateItem.BaseMagicPower" />
                            </div>
                            <div class="mb-1">
                                <label class="form-label fs-6">Base Protection Physical</label>
                                <input class="form-control form-control-sm" type="number" placeholder="Base Protection Physical" @bind-value="CreateItem.BaseProtectionPhysical" />
                            </div>
                            <div class="mb-1">
                                <label class="form-label fs-6">Base Protection Magic</label>
                                <input class="form-control form-control-sm" type="number" placeholder="Base Protection Magic" @bind-value="CreateItem.BaseProtectionMagic" />
                            </div>

                            <div class="text-center mt-3">
                                <button type="button" class="btn btn-primary" @onclick="CreateItemSave">Submit</button>
                                <button type="button" class="btn btn-primary" @onclick="ReturnToTable">Return</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </main>
}



@code {
    [Parameter]
    public ItemEditDTO CreateItem { get; set; }

    [Parameter]
    public EventCallback ItemSearch { get; set; }

    [Parameter]
    public EventCallback<string> ChangeState { get; set; }

    public string message;
    public string pageState;

    protected override async Task OnInitializedAsync()
    {
        pageState = "Active";
    }

    // Save Edited Item
    private async Task CreateItemSave()
    {
        /*if (CreateItem.ItemId == null || CreateItem.Price == null || CreateItem.Tradable == null || CreateItem.Quantity == null
        || string.IsNullOrEmpty(CreateItem.Name) || string.IsNullOrEmpty(CreateItem.Type) || string.IsNullOrEmpty(CreateItem.Image))
        {
            return;
        }*/

        var response = await client.PostAsync<string, ItemEditDTO>("https://localhost:8000/api/AdminItem", CreateItem);
        if (response.IsSuccessStatusCode)
        {
            pageState = "Active";
            await ReturnToTable();
        }
        else
        {
            pageState = "Error";
            message = "There was an issue with creating the item";
        }        
    }

    private async Task ReturnToTable()
    {
        await ItemSearch.InvokeAsync();
        await ChangeState.InvokeAsync("Table");
    }
}
